@use "sass:math";

@function em($px, $base-size: 16) {
    $result: math.div($px, $base-size) + em;
    @return $result;
}

@function rem($px, $root-size: 16) {
    $result: math.div($px, $root-size) + rem;
    @return $result;
}

@mixin media($point) {
    @media screen and (max-width: map-get($break-points, $point)) {
        @content;
    }
}

@mixin adaptive-value($property, $startSize, $minSize, $type) {
    $addSize: $startSize - $minSize;
  
    @if $type==1 {
      #{$property}: $startSize + px;
  
      @media (max-width: #{$maxWidthContainer + px}) {
        #{$property}: calc(#{$minSize + px} + #{$addSize} * ((100vw - 414px) / #{$maxWidthContainer - 414}));
      }
    }
  
    @else if $type==2 {
      #{$property}: $startSize + px;
  
      @media (min-width: #{$maxWidthContainer + px}) {
        #{$property}: calc(#{$minSize + px} #{$addSize} * ((100vw - 414px) / #{$maxWidth - 414}));
      }
    }
  
    @else {
      #{$property}: calc(#{$minSize + px} + #{$addSize} * ((100vw - 414px) / #{$maxWidth - 414}));
    }
}

@mixin button-basic($background-color, $text-color, $width, $height, $border-radius) {
    background-color: $background-color;
    color: $text-color;
    width: $width + px;
    height: $height + px;
    border-radius: $border-radius + px;
    display: flex;
    align-items: center;
    justify-content: center;
    font-family: 'Open Sans';
}  